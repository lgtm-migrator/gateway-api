openapi: 3.0.0
info:
  title: HDR UK API 
  description: API for Tools and artefacts repository.
  version: 0.0.1

servers:
  - url: http://localhost:3001/api

  - url: https://{environment}-api.healthresearch.tools:{port}/api
    variables:
      environment:
        default: latest
        description: The Environment name.
      port:
        enum:
          - '443'
        default: '443'

paths:
  /v1/datasets/{datasetID}:
    get:
      summary: Returns details for a Dataset.
      tags:
        - Datasets
      parameters:
        - in: path
          name: datasetID
          required: true
          description: The ID of the datset
          schema:
            type : integer
            format: int64
            minimum: 1
            example: 89522470
      responses: 
        '200':
          description: OK    

  /v1/datasets/detail/{datasetID}:
    get:
      summary: Returns additional details for a dataset from the Metadata catalogue.
      tags:
        - Datasets
      parameters:
        - in: path
          name: datasetID
          required: true
          description: The ID of the datset
          schema:
           type : string
            example: d3a3935f-b28e-4e74-9b15-9432d611f26c
      responses: 
        '200':
          description: OK 

  /v1/datasets/search?search={searchTerm}:
    get:
      summary: Returns dataset search results by searchTerm
      tags:
        - Datasets
      parameters:
        - name: searchTerm
          in: path
          required: true
          description: A search term.
          schema:
            type : string
            example: epilepsy
      responses: 
        '200':
          description: OK

  /v1/datasets/filters?search={searchTerm}:
    get:
      summary: Returns filters options for datasets
      tags:
        - Datasets
      parameters:
        - name: search
          in: query
          required: false
          description: Type of datasearch.
          schema:
            type : string
            example: epilepsy
      responses: 
        '200':
          description: OK
                
  /v1/datasets/access/request:
    post:
      summary: Access request for dataset
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                title:
                  type: string
                  example: 'Epilepsy 12 - National organisation audit'
                userId:
                  type: integer
                  example: 12345654323456
                dataSetId:
                  type: string,
                  example: '2345654323456'
                custodianEmail:
                  type: string,
                  example: 'yourCustodianEmail@email.com'
                researchAim:
                  type: string
                  example: 'The aim of your research, description needed.'
                linkedDataSets:
                  type: boolean
                  example: true
                namesOfDataSets:
                  type: string
                  example: 'The name of the datasets that are linked.'
                dataRequirements:
                  type: boolean
                  example: true
                dataSetParts:
                  type: string
                  example: 'The dataset parts that you would like.'
                startDate:
                  type: string
                  example: '19/12/2022'     
                icoRegistration:
                  type: string
                  example: '66252AAA'
                researchBenefits:
                  type: string,
                  example: 'Would benefit would this research provide.'
                ethicalProcessingEvidence:
                  type: string
                  example: 'Ethical processing evidence'
                contactNumber:
                  type: string
                  example: '07656788909'
      tags:
        - Datasets
      responses: 
        '200':
          description: OK
        
  /v1/person/{personID}:
    get:
      summary: Returns details for a person.
      tags:
        - Person
      parameters:
        - in: path
          name: personID
          required: true
          description: The ID of the person
          schema:
            type : string
            example: b2475d19-75fe-422b-9d0c-c53cdfff8230
      responses:
        '200':
          description: OK 
          
  /v1/search:
    get:
      tags:
        - Search
      summary: Search for HDRUK /search?search
      produces:
        - application/json
      parameters:
        - in: query
          name: params
          schema:
            type: object
            properties:
              search:
                type: string
                example: Epilepsy
              type:
                type: string
                example: all
              category:
                type: string
                example: API
              programmingLanguage:
                type: string
                example: Javascript
              features:
                type: string
                example: Arbitrage
              topics:
                type: string
                example: Epilepsy
              startIndex:
                type: string
                example: 0
              maxResults:
                type: string
                example: 10
          style: form
          explode: true
      responses: 
        '200':
          description: OK
  
  /v1/stats:
    get:
      summary: This will return a JSON document to show high level stats.
      tags:
        - Stats
      responses: 
        '200':
          description: OK

  /v1/stats/recent:
    get:
      summary: Return the details on the recent searches.
      tags:
        - Stats
      responses: 
        '200':
          description: OK

  /v1/stats/unmet:
    get:
      summary: Return the details on the unmet searches.
      tags:
        - Stats
      responses: 
        '200':
          description: OK

  /v1/stats/popular:
    get:
      summary: Return the details on the popular objects.
      tags:
        - Stats
      responses: 
        '200':
          description: OK

  /v1/stats/updates:
    get:
      summary: Return the details on the updated objects.
      tags:
        - Stats
      responses: 
        '200':
          description: OK

  /v1/mytools/add:
    post:
      summary: Add a tool (Project / Tool).
      security:
        - cookieAuth: []
      tags:
        - MyTools
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                type:
                  type: string
                name:
                  type: string
                link:
                  type: string
                description:
                  type: string
                categories:
                  type: object
                  properties:
                    category:
                      type: string
                    programmingLanguage:
                      type: array
                      items:
                        type: string
                    programmingLanguageVersion:
                      type: string
                licence:
                  type: string
                authors:
                  type: array
                  items:
                    type: number
                tags:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string      
              example:   # Sample object
                type: 'tool || project'
                name: 'Epilepsy data research'
                link: 'http://epilepsy.org'
                description: 'Epilespy data research description'
                categories: { category: 'API', programmingLanguage: ['Javascript'], programmingLanguageVersion: '0.0.0'}
                licence: 'MIT licence'
                authors: [4495285946631793]
                tags: {features: ['Arbitrage'], topics: ['Epilepsy']}
      responses: 
        '200':
          description: OK
        
  /v1/mytools/edit:
    put:
      summary: Edit a (Project / tool).
      security:
        - cookieAuth: []
      tags:
        - MyTools
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                id:
                  type: number
                type:
                  type: string
                name:
                  type: string
                link:
                  type: string
                description:
                  type: string
                categories:
                  type: object
                  properties:
                    category:
                      type: string
                    programmingLanguage:
                      type: array
                      items:
                        type: string
                    programmingLanguageVersion:
                      type: string
                licence:
                  type: string
                authors:
                  type: array
                  items:
                    type: number
                tags:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string    
                toolids:
                  type: array
                  items:
                    type: string
              example:   # Sample object
                id: 26542005388306332
                type: 'tool'
                name: 'Research Data TEST EPILEPSY'
                link: 'http://localhost:8080/epilepsy'
                description: 'Epilespy data research description'
                categories: { category: 'API', programmingLanguage: ['Javascript'], programmingLanguageVersion: '1.0.0'}
                licence: 'MIT licence'
                authors: [4495285946631793]
                tags: {features: ['Arbitrage'], topics: ['Epilepsy']}
                toolids: []
      responses: 
        '200':
          description: OK
    
  /v1/tools/{toolID}:
    get:
      summary: Returns details for a specific tool.
      tags:
        - Tools
      parameters:
        - name: toolID
          in: path
          required: true
          description: The ID of the tool
          schema:
            type : integer
            format: int64
            minimum: 1
            example: 89522470
      responses: 
        '200':
          description: OK

  /v1/project/{projectId}:
    get:
      summary: Return the details on the project based on the project ID.
      tags:
        - Projects
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type : string
            example: b2475d19-75fe-422b-9d0c-c53cdfff8230
      responses: 
        '200':
          description: OK

  # /v1/accounts:
  #   get:
  #     summary: Account search.
  #     tags:
  #       - Account
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/accounts/admin:
  #   get:
  #     summary: Account search admins.
  #     tags:
  #       - Account
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/accounts/status:
  #   put:
  #     summary: Account update status.
  #     tags:
  #       - Account
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/accounts:
  #   delete:
  #     summary: Deletes an account.
  #     tags:
  #       - Account
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/users/{userId}:
  #   get:
  #     summary: Find user by id.
  #     tags:
  #       - Users
  #   parameters:
  #     - name: userId
  #       in: path
  #       required: true
  #       description: The ID of the user
  #       schema:
  #         type : string
  #         example: b2475d19-75fe-422b-9d0c-c53cdfff8230
  #   responses:
  #     '200':
  #       description: OK
  
  # /v1/users:
  #   get:
  #     summary: Find all users
  #     tags:
  #       - users
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/auth/register:
  #   post:
  #     summary: Register User.
  #     tags:
  #       - Users
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/auth/login:
  #   post:
  #     summary: Authenticate User.
  #     tags:
  #       - Auth   
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/auth/logout:
  #   get:
  #     summary: Logout.
  #     tags:
  #       - Auth
  #     responses: 
  #       '200':
  #         description: OK
  
  # /v1/auth/status:
  #   get:
  #     summary: Auth status.
  #     tags:
  #       - Auth
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/mytools/add:
  #   post:
  #     summary: Add a tool.
  #     tags:
  #       - MyTools
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/mytools/edit:
  #   put:
  #     summary: Edit a tool.
  #     tags:
  #       - MyTools
  #     responses: 
  #       '200':
  #         description: OK

  # /v1/mytools/delete:
  #   delete:
  #     summary: delete a tool.
  #     tags:
  #       - MyTools
  #     responses: 
  #       '200':
  #         description: OK
  
  # /v1/messages/{personId}:
  #   get:
  #     summary: Find messages by person.
  #     tags:
  #       - Messages
  #     parameters:
  #       - name: personId
  #         in: path
  #         required: true
  #         description: The ID of the person
  #         schema:
  #           type : string
  #           example: b2475d19-75fe-422b-9d0c-c53cdfff8230

  # /v1/messages/admin/{personId}:
  #   get:
  #     summary: find messages for admin by person id
  #     tags:
  #       - Messages
  #     parameters:
  #       - name: personId
  #         in: path
  #         required: true
  #         description: The ID of the person
  #         schema:
  #           type : string
  #           example: b2475d19-75fe-422b-9d0c-c53cdfff8230

  # /v1/reviews:
  #   get:
  #     summary: find all reviews.
  #     tags:
  #       - Reviews

  # /v1/reviews/pending:
  #   get:
  #     summary: find all pending reviews.
  #     tags:
  #       - Reviews

  # /v1/reviews/admin/pending:
  #   get:
  #     summary: find all pending reviews for admins.
  #     tags:
  #       - Reviews

  # /v1/discourse/topic/tool/{toolId}:
  #   put:
  #     summary: This route creates a new topic in Discourse if the tool exists and is active. Returns an object with the link to the new Discourse topic.
  #     tags:
  #       - Discourse
  #     parameters:
  #       - name: toolId
  #         in: path
  #         required: true
  #         description: Tool id

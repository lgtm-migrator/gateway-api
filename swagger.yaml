openapi: 3.0.1
info:
  title: defaultTitle
  description: defaultDescription
  version: '0.1'
servers:
  - url: 'https://api.www.healthdatagateway.org'
security: 
- oauth2: []
paths:
  /oauth/token:
    post:
      tags: 
        - Authorization
      description: Auto generated using Swagger Inspector
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                client_secret:
                  type: string
                client_id:
                  type: string
            examples:
              '0':
                value: |-
                  {
                      "grant_type":"client_credentials",
                      "client_id":"2ca1f61a90e3547",
                      "client_secret":"3f80fecbf781b6da280a8d17aa1a22066fb66daa415d8befc1"
                  }
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples: {}
  
  /api/v1/data-access-request/5fbb9c464705566a6ddfcced:
    get:
      tags: 
        - Data Access Request
      description: Auto generated using Swagger Inspector
      responses:
        '200':
          description: Auto generated using Swagger Inspector
      servers:
        - url: 'https://api.uatbeta.healthdatagateway.org'
    servers:
      - url: 'https://api.uatbeta.healthdatagateway.org'
  
  /api/v1/data-access-request/60142c5b4316a0e0fcd47c56:
    put:
      tags: 
        - Data Access Request
      description: Auto generated using Swagger Inspector
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationStatus:
                  type: string
                applicationStatusDesc:
                  type: string
            examples:
              '0':
                value: |-
                  {
                      "applicationStatus": "approved",
                      "applicationStatusDesc": ""
                  }
      responses:
        '200':
          description: Auto generated using Swagger Inspector
      servers:
        - url: 'https://api.uatbeta.healthdatagateway.org'
    servers:
      - url: 'https://api.uatbeta.healthdatagateway.org'
  
  /api/v1/publishers/OTHER > HEALTH DATA RESEARCH UK/dataaccessrequests:
    get:
      tags:
        - Publishers
      description: Auto generated using Swagger Inspector
      responses:
        '200':
          description: Auto generated using Swagger Inspector
      servers:
        - url: 'https://api.uatbeta.healthdatagateway.org'
    servers:
      - url: 'https://api.uatbeta.healthdatagateway.org'
  /v1/datasets/{datasetID}:
    get:
      summary: Returns Dataset object.
      tags:
        - Datasets
      parameters:
        - in: path
          name: datasetID
          required: true
          description: The ID of the datset
          schema:
            type : string
            example: '756daeaa-6e47-4269-9df5-477c01cdd271'
      responses: 
        '200':
          description: OK    

  /v1/datasets/:
    get:
      summary: Returns List of Dataset objects.
      tags:
        - Datasets
      parameters:
      - in: query
        name: limit
        required: false
        description: Limit the number of results
        schema:
          type : integer
          example: 3
      - in: query
        name: offset
        required: false
        description: Index to offset the search results
        schema:
          type : integer
          example: 1
      - in: query
        name: q
        required: false
        description: Filter using search query
        schema:
          type : string
          example: epilepsy
      responses: 
        '200':
          description: OK

  /v1/data-access-request/{datasetID}:
    get:
      summary: Returns access request template.
      security:
        - cookieAuth: []
      tags:
        - Data Access Request
      parameters:
        - in: path
          name: datasetID
          required: true
          description: The ID of the datset
          schema:
            type : string
            example: 6efbc62f-6ebb-4f18-959b-1ec6fd0cc6fb
      responses: 
        '200':
          description: OK 

  /v1/data-access-request/{id}:
    patch:
      summary: Update a users question answers for access request.
      security:
        - cookieAuth: []
      tags:
        - Data Access Request
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the datset
          schema:
            type : string
            example: 5ee249426136805fbf094eef
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                questionAnswers:
                  type: object
            examples:
              '0':
                value: |-
                  {
                      "firstName": "Roger"
                  }
      responses: 
        '200':
          description: OK 
          
  /v1/person/{id}:
    get:
      summary: Returns details for a person.
      tags:
        - Person
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the person
          schema:
            type : string
            example: 900000014
      responses:
        '200':
          description: OK
          
  /v1/person/:
    get:
      summary: Returns an array of person objects.
      tags:
        - Person
      responses:
        '200':
          description: OK
    post:
      summary: Returns a new person object.
      tags:
        - Person
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - firstname
                - lastname
                - bio
                - link
                - orcid
                - emailNotifications
                - terms
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                bio:
                  type: string
                link:
                  type: string
                orcid:
                  type: string
                emailNotifications:
                  type: boolean
                terms:
                  type: boolean
              example:
                firstname: 'John'
                lastname: 'Smith'
                bio: 'Researcher'
                link: 'http://google.com'
                orcid: 'https://orcid.org/123456789'
                emailNotifications: false
                terms: true
      responses:
        '200':
          description: OK
    put:
      summary: Returns edited person object.
      tags:
        - Person
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - id
                - bio
                - link
                - orcid
                - emailNotifications
                - terms
              properties:
                id:
                  type: string
                bio:
                  type: string
                link:
                  type: string
                orcid:
                  type: string
                emailNotifications:
                  type: boolean
                terms:
                  type: boolean
              example:
                id: '5268590523943617'
                bio: 'Research assistant'
                link: 'http://google.com'
                orcid: 'https://orcid.org/123456789'
                emailNotifications: false
                terms: true
          
  /v1/search/:
    get:
      tags:
        - Search
      summary: Search for HDRUK /search?search
      parameters:
        - in: query
          name: params
          schema:
            type: object
            properties:
              search:
                type: string
                example: Epilepsy
              type:
                type: string
                example: all
              category:
                type: string
                example: API
              programmingLanguage:
                type: string
                example: Javascript
              features:
                type: string
                example: Arbitrage
              topics:
                type: string
                example: Epilepsy
              startIndex:
                type: string
                example: 0
              maxResults:
                type: string
                example: 10
          style: form
          explode: true
      responses: 
        '200':
          description: OK
  
  /v1/stats/topSearches:
    get:
      summary: Returns top searches for a given month and year.
      tags:
        - Stats
      parameters:
        - name: month
          in: query
          required: true
          description: Month number.
          schema:
            type : string
            example: 7
        - name: year
          in: query
          required: true
          description: Year.
          schema:
            type : string
            example: 2020
      responses: 
        '200':
          description: OK

  /v1/stats/:
    get:
      summary: Returns the details on recent searches, popular objects, unmet demands or recently updated objects based on the rank query parameter.
      tags:
        - Stats
      parameters:
        - name: rank
          in: query
          required: true
          description: The type of stat.
          schema:
            type : string
            example: unmet
        - name: type
          in: query
          required: true
          description: Resource type.
          schema:
            type : string
            example: Tools
        - name: month
          in: query
          required: true
          description: Month number.
          schema:
            type : string
            example: 7
        - name: year
          in: query
          required: true
          description: Year.
          schema:
            type : string
            example: 2020
      responses: 
        '200':
          description: OK

  /v1/kpis/:
    get:
      summary: Returns information for KPIs, based on the KPI type and selectedDate parameters.
      tags:
        - KPIs
      parameters:
        - name: type
          in: query
          required: true
          description: The type of KPI.
          schema:
            type : string
            example: uptime
        - name: selectedDate
          in: query
          required: true
          description: Full date time string.
          schema:
            type : string
            example: Wed Jul 01 2020 01:00:00 GMT 0100 (British Summer Time)
      responses: 
        '200':
          description: OK
          
  /v1/messages/{id}:
    delete:
      summary: Delete a Message
      security:
        - cookieAuth: []
      tags:
        - Messages
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the Message
          schema:
            type: string
            example: "5ee249426136805fbf094eef"
      responses:
        '204':
          description: Ok
    put:
      summary: Update a single Message
      security:
        - cookieAuth: []
      tags:
        - Messages
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the Message
          schema:
            type: string
            example: "5ee249426136805fbf094eef"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                isRead:
                  type: boolean
            examples:
              'Update message to read':
                value: |-
                  {
                      "isRead": true
                  }
      responses: 
        '204':
          description: OK 
    
  /v1/messages/unread/count:
    get:
      summary: Returns the number of unread messages for the authenticated user
      security:
        - cookieAuth: []
      tags:
        - Messages
      responses: 
        '200':
          description: OK 
            
  /v1/messages/:
    post:
      summary: Returns a new Message object and creates an associated parent Topic if a Topic is not specified in request body
      security:
        - cookieAuth: []
      tags:
        - Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isRead:
                  type: boolean
                messageDescription:
                  type: string
                messageType:
                  type: string
              required:
                - isRead
                - messageDescription
                - messageType
            examples:
              'Create new message':
                value: |-
                  {
                      "isRead": false,
                      "messageDescription": "this is an example",
                      "messageType": "message"
                  }
      responses: 
        '201':
          description: OK
          
  /v1/topics/:
    post:
      summary: Returns a new Topic object with ID (Does not create any associated messages)
      security:
        - cookieAuth: []
      tags:
        - Topics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                relatedObjectIds:
                  type: array
                  items:
                    type: string
            examples:
              'Create a new topic':
                value: |-
                  {
                      "relatedObjectIds": "['1','2','3']"
                  }
      responses:
        '201':
          description: A new Topic
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: object
                    description: Generated ID
                  title:
                    type: string
                    description: Title of message
                  subtitle:
                    type: string
                    description: Subtitle of message
                  relatedObjectIds:
                    type: array
                    items:
                      type: string
                    description: Object ID this Topic is related to
                  createdBy:
                    type: object
                    description: User that created the topic
                  createdDate:
                    type: string
                    description: Date the topic was created
                  recipients:
                    type: array
                    items:
                      type: string
                    description: Collection of user IDs
                  tags:
                    type: array
                    items:
                      type: string
                    description: Collection of tags to describe topic
    get:
      summary: Returns a list of all topics that the authenticated user is a recipient or member of
      security:
        - cookieAuth: []
      tags:
        - Topics
      responses:
        '200':
          description: Ok                
                    
  /v1/topics/{id}:
    get:
      summary: Returns Topic object by ID
      security:
        - cookieAuth: []
      tags:
        - Topics
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the topic
          schema:
            type: string
            example: "5ee249426136805fbf094eef"
      responses:
        '200':
          description: Ok
    delete:
      summary: Soft deletes a message Topic but does not affect associated messages
      security:
        - cookieAuth: []
      tags:
        - Topics
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the Topic
          schema:
            type: string
            example: "5ee249426136805fbf094eef"
      responses:
        '204':
          description: Ok
            
  /v1/projects/:
    post:
      summary: Returns a Project object with ID.
      security:
        - cookieAuth: []
      tags:
        - Projects
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                type:
                  type: string
                name:
                  type: string
                link:
                  type: string
                description:
                  type: string
                categories:
                  type: object
                  properties:
                    category:
                      type: string
                    programmingLanguage:
                      type: array
                      items:
                        type: string
                    programmingLanguageVersion:
                      type: string
                licence:
                  type: string
                authors:
                  type: array
                  items:
                    type: number
                tags:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string      
              example:   # Sample object
                type: 'project'
                name: 'Epilepsy data research'
                link: 'http://epilepsy.org'
                description: 'Epilespy data research description'
                categories: { category: 'API', programmingLanguage: ['Javascript'], programmingLanguageVersion: '0.0.0'}
                licence: 'MIT licence'
                authors: [4495285946631793]
                tags: {features: ['Arbitrage'], topics: ['Epilepsy']}
      responses: 
        '200':
          description: OK
    get:
      summary: Returns List of Project objects.
      tags:
        - Projects
      parameters:
      - in: query
        name: limit
        required: false
        description: Limit the number of results
        schema:
          type : integer
          example: 3
      - in: query
        name: offset
        required: false
        description: Index to offset the search results
        schema:
          type : integer
          example: 1
      - in: query
        name: q
        required: false
        description: Filter using search query
        schema:
          type : string
          example: epilepsy
      responses: 
        '200':
          description: OK
          
  /v1/projects/{id}:
    get:
      summary: Returns Project object.
      tags:
        - Projects
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type : integer
            example: 441788967946948
      responses: 
        '200':
          description: OK
    patch:
      summary: Change status of the Project object.
      security:
        - cookieAuth: []
      tags:
        - Projects
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 662346984100503
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                activeflag:
                  type: string
              example:   # Sample object
                activeflag: 'active'
      responses: 
        '200':
          description: OK
    put:
      summary: Returns edited Project object.
      security:
        - cookieAuth: []
      tags:
        - Projects
      parameters:
      - in: path
        name: id
        required: true
        description: The ID of the project
        schema:
          type : integer
          format: int64
          example: 26542005388306332
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                id:
                  type: number
                type:
                  type: string
                name:
                  type: string
                link:
                  type: string
                description:
                  type: string
                categories:
                  type: object
                  properties:
                    category:
                      type: string
                    programmingLanguage:
                      type: array
                      items:
                        type: string
                    programmingLanguageVersion:
                      type: string
                licence:
                  type: string
                authors:
                  type: array
                  items:
                    type: number
                tags:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string    
                toolids:
                  type: array
                  items:
                    type: string
              example:   # Sample object
                id: 26542005388306332
                type: 'project'
                name: 'Research Data TEST EPILEPSY'
                link: 'http://localhost:8080/epilepsy'
                description: 'Epilespy data research description'
                categories: { category: 'API', programmingLanguage: ['Javascript'], programmingLanguageVersion: '1.0.0'}
                licence: 'MIT licence'
                authors: [4495285946631793]
                tags: {features: ['Arbitrage'], topics: ['Epilepsy']}
                toolids: []
      responses: 
        '200':
          description: OK

  /v1/papers/:
    post:
      summary: Returns a Paper object with ID.
      security:
        - cookieAuth: []
      tags:
        - Papers
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                type:
                  type: string
                name:
                  type: string
                link:
                  type: string
                description:
                  type: string
                categories:
                  type: object
                  properties:
                    category:
                      type: string
                    programmingLanguage:
                      type: array
                      items:
                        type: string
                    programmingLanguageVersion:
                      type: string
                licence:
                  type: string
                authors:
                  type: array
                  items:
                    type: number
                tags:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string      
              example:   # Sample object
                type: 'paper'
                name: 'Epilepsy data research'
                link: 'http://epilepsy.org'
                description: 'Epilespy data research description'
                categories: { category: 'API', programmingLanguage: ['Javascript'], programmingLanguageVersion: '0.0.0'}
                licence: 'MIT licence'
                authors: [4495285946631793]
                tags: {features: ['Arbitrage'], topics: ['Epilepsy']}
      responses: 
        '200':
          description: OK
    get:
      summary: Return List of Paper objects.
      tags:
        - Papers
      parameters:
      - in: query
        name: limit
        required: false
        description: Limit the number of results
        schema:
          type : integer
          example: 3
      - in: query
        name: offset
        required: false
        description: Index to offset the search results
        schema:
          type : integer
          example: 1
      - in: query
        name: q
        required: false
        description: Filter using search query
        schema:
          type : string
          example: epilepsy
      responses: 
        '200':
          description: OK
  
  /v1/papers/{id}:
    get:
      summary: Returns Paper object.
      tags:
        - Papers
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type : integer
            format: int64
            minimum: 1
            example: 8370396016757367
      responses: 
        '200':
          description: OK
    patch:
      summary: Change status of the Paper object.
      security:
        - cookieAuth: []
      tags:
        - Papers
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          example: 7485531672584456
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                id:
                  type: number
                activeflag:
                  type: string
              example:   # Sample object
                activeflag: 'active'
      responses: 
        '200':
          description: OK
    put:
      summary: Returns edited Paper object.
      security:
        - cookieAuth: []
      tags:
        - Papers
      parameters:
      - in: path
        name: id
        required: true
        description: The ID of the paper
        schema:
          type : integer
          format: int64
          example: 7485531672584456
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                id:
                  type: number
                type:
                  type: string
                name:
                  type: string
                link:
                  type: string
                description:
                  type: string
                categories:
                  type: object
                  properties:
                    category:
                      type: string
                    programmingLanguage:
                      type: array
                      items:
                        type: string
                    programmingLanguageVersion:
                      type: string
                licence:
                  type: string
                authors:
                  type: array
                  items:
                    type: number
                tags:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string    
                toolids:
                  type: array
                  items:
                    type: string
              example:   # Sample object
                id: 7485531672584456
                type: 'paper'
                name: 'Test Paper Title 2'
                link: 'http://localhost:8080/epilepsy'
                description: 'Test abstract 2'
                categories: { category: 'API', programmingLanguage: ['Javascript'], programmingLanguageVersion: '1.0.0'}
                licence: 'MIT licence'
                authors: [4495285946631793]
                tags: {features: ['Arbitrage'], topics: ['Epilepsy']}
                toolids: []
      responses: 
        '200':
          description: OK

  /v1/tools/:
    get:
      summary: Return List of Tool objects.
      tags:
        - Tools
      parameters:
      - in: query
        name: limit
        required: false
        description: Limit the number of results
        schema:
          type : integer
          example: 3
      - in: query
        name: offset
        required: false
        description: Index to offset the search results
        schema:
          type : integer
          example: 1
      - in: query
        name: q
        required: false
        description: Filter using search query
        schema:
          type : string
          example: epilepsy
      responses: 
        '200':
          description: OK
    post:
      summary: Returns new Tool object with ID.
      security:
        - cookieAuth: []
      tags:
        - Tools
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                type:
                  type: string
                name:
                  type: string
                link:
                  type: string
                description:
                  type: string
                categories:
                  type: object
                  properties:
                    category:
                      type: string
                    programmingLanguage:
                      type: array
                      items:
                        type: string
                    programmingLanguageVersion:
                      type: string
                licence:
                  type: string
                authors:
                  type: array
                  items:
                    type: number
                tags:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string      
              example:   # Sample object
                id: 26542005388306332
      responses: 
        '200':
          description: OK
          
  /v1/tools/{id}:
    get:
      summary: Returns Tool object.
      tags:
        - Tools
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the tool
          schema:
            type : integer
            format: int64
            minimum: 1
            example: 19009
      responses: 
        '200':
          description: OK
    put:
      summary: Returns edited Tool object.
      security:
        - cookieAuth: []
      tags:
        - Tools
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type : integer
            example: 123
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                id:
                  type: number
                type:
                  type: string
                name:
                  type: string
                link:
                  type: string
                description:
                  type: string
                categories:
                  type: object
                  properties:
                    category:
                      type: string
                    programmingLanguage:
                      type: array
                      items:
                        type: string
                    programmingLanguageVersion:
                      type: string
                licence:
                  type: string
                authors:
                  type: array
                  items:
                    type: number
                tags:
                  type: object
                  properties:
                    features:
                      type: array
                      items:
                        type: string
                    topics:
                      type: array
                      items:
                        type: string    
                toolids:
                  type: array
                  items:
                    type: string
              example:   # Sample object
                id: 26542005388306332
                type: 'tool'
                name: 'Research Data TEST EPILEPSY'
                link: 'http://localhost:8080/epilepsy'
                description: 'Epilespy data research description'
                categories: { category: 'API', programmingLanguage: ['Javascript'], programmingLanguageVersion: '1.0.0'}
                licence: 'MIT licence'
                authors: [4495285946631793]
                tags: {features: ['Arbitrage'], topics: ['Epilepsy']}
                toolids: []
      responses: 
        '200':
          description: OK
    patch:
      summary: Change status of Tool object.
      security:
        - cookieAuth: []
      tags:
        - Tools
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the tool
          schema:
            type : integer
            format: int64
            example: 5032687830560181
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              required:
                - name
              properties:
                id:
                  type: number
                activeflag:
                  type: string
              example:   # Sample object
                id: 662346984100503
                activeflag: 'active'
      responses: 
        '200':
          description: OK
    
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://api.www.healthdatagateway.org/oauth/token'
    cookieAuth:
      type: http
      scheme: jwt
      